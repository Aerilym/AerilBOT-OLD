"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ParameterRequirementMismatchError = /** @class */ (function (_super) {
    __extends(ParameterRequirementMismatchError, _super);
    function ParameterRequirementMismatchError(_command, _paramName, _paramSpec, _givenValue) {
        var _this = _super.call(this, "required parameter \"" + _paramName + "\" did not validate against " + (_paramSpec.type ||
            'regex') + " validation: \"" + _givenValue + "\"") || this;
        _this._command = _command;
        _this._paramName = _paramName;
        _this._paramSpec = _paramSpec;
        _this._givenValue = _givenValue;
        Object.setPrototypeOf(_this, ParameterRequirementMismatchError.prototype);
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, ParameterRequirementMismatchError);
        }
        return _this;
    }
    Object.defineProperty(ParameterRequirementMismatchError.prototype, "command", {
        get: function () {
            return this._command;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParameterRequirementMismatchError.prototype, "paramName", {
        get: function () {
            return this._paramName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParameterRequirementMismatchError.prototype, "paramSpec", {
        get: function () {
            return this._paramSpec;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParameterRequirementMismatchError.prototype, "givenValue", {
        get: function () {
            return this._givenValue;
        },
        enumerable: true,
        configurable: true
    });
    return ParameterRequirementMismatchError;
}(Error));
exports.default = ParameterRequirementMismatchError;
//# sourceMappingURL=ParameterRequirementMismatchError.js.map