"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MessageParser_1 = require("../MessageParser");
var PrivateMessage_1 = require("../MessageTypes/Commands/PrivateMessage");
describe('Message parser', function () {
    it('parses a standard message without tags', function () {
        var msg = MessageParser_1.parseMessage(':a!b@c PRIVMSG #test :hi');
        expect(msg).toBeInstanceOf(PrivateMessage_1.default);
        expect(msg.prefix).toStrictEqual({ nick: 'a', user: 'b', host: 'c' });
        expect(msg.params).toStrictEqual({ target: '#test', message: 'hi' });
        expect(msg.tags).not.toBeUndefined();
        expect(msg.tags.size).toBe(0);
    });
    it('parses a standard message with tags', function () {
        var msg = MessageParser_1.parseMessage('@foo=bar;no-val; :a!b@c PRIVMSG #test :hi');
        expect(msg).toBeInstanceOf(PrivateMessage_1.default);
        expect(msg.prefix).toStrictEqual({ nick: 'a', user: 'b', host: 'c' });
        expect(msg.params).toStrictEqual({ target: '#test', message: 'hi' });
        expect(msg.tags).not.toBeUndefined();
        expect(msg.tags.size).toBe(2);
        expect(msg.tags.get('foo')).toBe('bar');
        expect(msg.tags.get('no-val')).toBe('');
    });
    it('parses tags only at the beginning of the message', function () {
        var msg = MessageParser_1.parseMessage(':a!b@c @foo=bar PRIVMSG #test :hi');
        expect(msg).not.toBeInstanceOf(PrivateMessage_1.default);
        expect(msg.command).toBe('@FOO=BAR');
        expect(msg.tags).not.toBeUndefined();
        expect(msg.tags.size).toBe(0);
    });
    it('parses tag escapes properly', function () {
        var tags = MessageParser_1.parseTags("text=it'sa\\sme\\:\\sMario!\\\\\\r\\n\\;test=\\p\\ass\\e\\d\\\\\\!");
        expect(tags).not.toBeUndefined();
        expect(tags.size).toBe(2);
        expect(tags.get('text')).toBe("it'sa me; Mario!\\\r\n");
        expect(tags.get('test')).toBe('passed\\!');
    });
});
//# sourceMappingURL=MessageParser.test.js.map